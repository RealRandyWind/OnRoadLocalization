#!/bin/bash

if [ -z $1 ]; then
	echo "No className given."
	exit 1
fi

className=M$(echo ${1}| sed 's/\(.\)/\U\1/')
fileName=${className}
gaurdName=$(echo ${className}| tr '[:lower:]' '[:upper:]')
location=${2+"${2}/"}


cat << _EOF_ >> ${location}${fileName}.hpp
#ifndef ${gaurdName}_HPP
#define ${gaurdName}_HPP

class ${className};
class ${className}
{
private:
	${className}();
	static ${className}* a_oInstance;
	bool a_bIsSetUp;
	bool a_bIsShutDown; 
public:
	~${className}();
	static ${className}* GetInstance();

	void SetUp();
	void ShutDown();
};
#endif
_EOF_

cat << _EOF_ >> ${location}${fileName}.cpp
#include "${fileName}.hpp"

${className}* ${className}::a_oInstance = 0;

${className}::${className}()
{
	a_bIsShutDown = false;
	a_bIsSetUp = false;
}

${className}::~${className}()
{

}

${className}* ${className}::GetInstance()
{
	if(a_oInstance) { return a_oInstance; }
	a_oInstance = new ${className}();
	return a_oInstance;
}

void ${className}::SetUp()
{
	if(a_bIsSetUp) {
		return; 
	}
	a_bIsShutDown = false;

	// TODO ${className} SetUp

	a_bIsSetUp = true;
}

void ${className}::ShutDown()
{
	if(a_bIsShutDown) {
		return; 
	}
	a_bIsSetUp = false;

	// TODO ${className} ShutDown

	a_bIsShutDown = true;
}
_EOF_